---
import type { CollectionEntry } from 'astro:content';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

type Props = CollectionEntry<'projects'>['data'];

const { title, tags, description, heroImage, compactHero } = Astro.props;

---

<html lang="en">
	<head>
		<BaseHead title=`${SITE_TITLE} | ${title}` description={SITE_DESCRIPTION} />
	</head>

	<body>
		<Header compact />
		<main class="main-wrapper">
			<article>
				<div class="prose">
                    <div class="article-header">
                        <div class="title">
                            <h1 class="title-text">{title}</h1>

                            <ul class="tags">
                                {tags.map((tag) => (
                                    <li class="mono-bold">{tag}</li>
                                ))}
                            </ul>
                        </div>
                        {description && <h2 class="description">
                            {description}
                        </h2>}
                        
                        {heroImage && <div class=`hero-image ${compactHero && 'compact-hero'}`>
                            <img src={heroImage} alt="" />
                        </div>}
                    </div>
                    <div class="article-content">
                        <slot />
                    </div>
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>

<style>
    main.main-wrapper {
        width: 720px;
    }

    .article-header {
        margin-bottom: var(--large-spacing-rem);
        text-align: center;
    }

    .article-header h1 {
        margin-bottom: var(--x-small-spacing-rem);
    }
    .article-header h2 {
        margin-bottom: var(--standard-spacing-rem);
    }

    .article-header .hero-image {
        padding: var(--standard-spacing-px) 0;
        position: relative;
    }

    .article-header .hero-image::after {
        background-color: var(--soft-highlight);
        border-radius: 50%;
        content: '';
        filter: blur(128px);
        height: 80%;
        left: 50%;
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        z-index: 0;
    }

    .article-header .hero-image img {
        max-height: 400px;
        object-fit: contain;
        position: relative;
        width: 100%;
        z-index: 1;
    }

    .article-header .compact-hero {
        padding-bottom: 0;
    }


    .article-header .compact-hero img {
        max-height: 200px;
    }

    .article-header .tags {
        display: flex;
        flex-wrap: wrap;
        gap: var(--small-spacing-px);
        justify-content: center;
        margin-bottom: var(--standard-spacing-rem);
        padding: 0;
    }

    .article-header .tags li {
        list-style: none;
    }

    .article-header .tags li::after {
        content: '|';
        margin-left: var(--small-spacing-px);
    }

    .article-header .tags li:last-child::after {
        content: '';
        margin-left: 0;
    }


</style>
