---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';

import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Card from '../components/Card/Card';



type Props = CollectionEntry<'projects'>['data'];

const { title, tags, description, heroImage, compactHero, order } = Astro.props;

// find matching projects
// remove self
// order results to most important projects
// Count the number of matches in each sub-array
// only display 4
const projects = (await getCollection('projects')).filter(project => (
        project.data.tags.some(projectTag => tags.includes(projectTag))
    ))
    .filter(({data}) => order !== data.order)
    .sort((a, b) => b.data.order - a.data.order)
    .sort((a, b) => {
        const countMatches = (arr: string[]) => arr.filter(projectTag => tags.includes(projectTag)).length;
        return countMatches(b.data.tags) - countMatches(a.data.tags); // Sort in descending order
    })
    .slice(0, 4);

---

<html lang="en">
	<head>
		<BaseHead title=`${SITE_TITLE} | ${title}` description={SITE_DESCRIPTION} />
	</head>

	<body>
		<Header compact />
		<main class="main-wrapper">
			<article>
				<div class="prose">
                    <div class="article-header">
                        <div class="title">
                            <h1 class="title-text">{title}</h1>

                            <ul class="tags">
                                {tags.map((tag) => (
                                    <li class="mono-bold">{tag}</li>
                                ))}
                            </ul>
                        </div>
                        {description && <h2 class="description title-2-text">
                            {description}
                        </h2>}
                        
                        {heroImage && <div class=`hero-image ${compactHero && 'compact-hero'}`>
                            <img src={heroImage} alt="" />
                        </div>}
                    </div>
                    <div class="article-content">
                        <slot />
                    </div>
				</div>
			</article>

            {!!projects.length && <div class="related-projects-section">
                <h2 class="mono-bold">Related Projects</h2>
                <ul class="related-project-list">
                    {projects.map(project => (
                        <li>
                            <Card
                                companyImages={project.data.companyImages}
                                href={`/projects/${project.slug}`}
                                slug={project.slug}
                                summary={project.data.summary}
                                tags={project.data.tags}
                                title={project.data.title} />
                        </li>
                    ))}
                </ul>
            </div>}
		</main>
        
		<Footer />
	</body>
</html>

<style>
    main.main-wrapper {
        width: 720px;
    }

    .article-header {
        margin-bottom: var(--large-spacing-rem);
        text-align: center;
    }

    .article-header h1 {
        margin-bottom: 0.25em;
    }
    .article-header h2 {
        margin-bottom: var(--standard-spacing-rem);
    }

    .article-header .hero-image {
        padding: var(--standard-spacing-px) 0;
        position: relative;
    }

    .article-header .hero-image::after {
        background-color: var(--soft-highlight);
        border-radius: 50%;
        content: '';
        filter: blur(128px);
        height: 80%;
        left: 50%;
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        z-index: 0;
    }

    .article-header .hero-image img {
        max-height: 400px;
        object-fit: contain;
        position: relative;
        width: 100%;
        z-index: 1;
    }

    .article-header .compact-hero {
        padding-bottom: 0;
    }


    .article-header .compact-hero img {
        max-height: 200px;
    }

    .article-header .tags {
        display: flex;
        flex-wrap: wrap;
        gap: var(--x-small-spacing-px) var(--small-spacing-px);
        justify-content: center;
        margin-bottom: var(--standard-spacing-rem);
        padding: 0;
    }

    .article-header .tags li {
        list-style: none;
    }

    .article-header .tags li::after {
        content: '|';
        margin-left: var(--small-spacing-px);
    }

    .article-header .tags li:last-child::after {
        content: '';
        margin-left: 0;
    }

    .related-projects-section {
        margin-top: var(--x-large-spacing-rem);
    }

    .related-projects-section h2 {
        border-bottom: thin solid var(--primary-text);
    }

    .related-project-list {
        display: grid;
        gap: var(--small-spacing-px);
        grid-template-columns: 1fr;
        list-style: none;
        padding-left: 0;
    }

    .related-project-list li:nth-child(n + 3) {
        display: none;
    }

    @media (min-width: 640px) {
        .related-project-list {
            grid-template-columns: repeat(2, 1fr);
        }

        .related-project-list li:nth-child(n + 3) {
            display: block;
        }
    }

    


</style>
